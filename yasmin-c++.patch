diff -urN yasmin-0.6.0.org/8051.cc yasmin-0.6.0/8051.cc
--- yasmin-0.6.0.org/8051.cc	Fri Feb 16 13:13:49 2001
+++ yasmin-0.6.0/8051.cc	Fri Feb 16 13:26:43 2001
@@ -1447,55 +1447,55 @@
 {
      if (DEBUG)
           cerr << "Creating mnemonic table... ";
-     mnemonic["ADD"] = &add; 
-     mnemonic["ADDC"] = &addc;
-     mnemonic["SUBB"] = &sub_borrow;
-     mnemonic["INC"] = &inc;  
-     mnemonic["DEC"] = &dec;
-     mnemonic["MUL"] = &multiply;  
-     mnemonic["DIV"] = &divide;
-     mnemonic["DA"] = &digital_adjust;  
-     mnemonic["ANL"] = &anl;
-     mnemonic["ORL"] = &orl;  
-     mnemonic["XRL"] = &xorl;
-     mnemonic["CLR"] = &clrb;  
-     mnemonic["CPL"] = &cpl;
-     mnemonic["RL"] = &rl;  
-     mnemonic["RLC"] = &rlc;
-     mnemonic["RR"] = &rr;  
-     mnemonic["RRC"] = &rrc;
-     mnemonic["SWAP"] = &swap;  
-     mnemonic["MOV"] = &move;
-     mnemonic["MOVX"] = &unknown;  
-     mnemonic["PUSH"] = &push;
-     mnemonic["POP"] = &pop;  
-     mnemonic["XCH"] = &exchange;
-     mnemonic["XCHD"] = &exchange_nibble;  
-     mnemonic["SETB"] = &setb;  
-     mnemonic["ACALL"] = &call;
-     mnemonic["LCALL"] = &call;
-     mnemonic["CALL"] = &call;
-     mnemonic["RET"] = &ret;
-     mnemonic["RETI"] = &reti;  
-     mnemonic["AJMP"] = &jump;          
-     mnemonic["LJMP"] = &jump;          
-     mnemonic["SJMP"] = &jump;
-     mnemonic["JMP"] = &jump;           
-     mnemonic["JZ"] = &jump_on_zero;
-     mnemonic["JNZ"] = &jump_not_zero;  
-     mnemonic["JC"] = &jump_on_carry;
-     mnemonic["JNC"] = &jump_no_carry;
-     mnemonic["JB"] = &jump_on_bit;
-     mnemonic["JNB"] = &jump_no_bit;  
-     mnemonic["JBC"] = &jump_on_bit_and_clear;
-     mnemonic["CJNE"] = &cmp_jump_on_not_equal;  
-     mnemonic["DJNZ"] = &djnz;
-     mnemonic["NOP"] = &nop;
-     mnemonic["END"] = &end;
-     mnemonic[""] = &zilch; // for labels on an empty line
-     mnemonic["ORG"] = &zilch;
+     mnemonic["ADD"] = &Sim8051::add; 
+     mnemonic["ADDC"] = &Sim8051::addc;
+     mnemonic["SUBB"] = &Sim8051::sub_borrow;
+     mnemonic["INC"] = &Sim8051::inc;  
+     mnemonic["DEC"] = &Sim8051::dec;
+     mnemonic["MUL"] = &Sim8051::multiply;  
+     mnemonic["DIV"] = &Sim8051::divide;
+     mnemonic["DA"] = &Sim8051::digital_adjust;  
+     mnemonic["ANL"] = &Sim8051::anl;
+     mnemonic["ORL"] = &Sim8051::orl;  
+     mnemonic["XRL"] = &Sim8051::xorl;
+     mnemonic["CLR"] = &Sim8051::clrb;  
+     mnemonic["CPL"] = &Sim8051::cpl;
+     mnemonic["RL"] = &Sim8051::rl;  
+     mnemonic["RLC"] = &Sim8051::rlc;
+     mnemonic["RR"] = &Sim8051::rr;  
+     mnemonic["RRC"] = &Sim8051::rrc;
+     mnemonic["SWAP"] = &Sim8051::swap;  
+     mnemonic["MOV"] = &Sim8051::move;
+     mnemonic["MOVX"] = &Sim8051::unknown;  
+     mnemonic["PUSH"] = &Sim8051::push;
+     mnemonic["POP"] = &Sim8051::pop;  
+     mnemonic["XCH"] = &Sim8051::exchange;
+     mnemonic["XCHD"] = &Sim8051::exchange_nibble;  
+     mnemonic["SETB"] = &Sim8051::setb;  
+     mnemonic["ACALL"] = &Sim8051::call;
+     mnemonic["LCALL"] = &Sim8051::call;
+     mnemonic["CALL"] = &Sim8051::call;
+     mnemonic["RET"] = &Sim8051::ret;
+     mnemonic["RETI"] = &Sim8051::reti;  
+     mnemonic["AJMP"] = &Sim8051::jump;          
+     mnemonic["LJMP"] = &Sim8051::jump;          
+     mnemonic["SJMP"] = &Sim8051::jump;
+     mnemonic["JMP"] = &Sim8051::jump;           
+     mnemonic["JZ"] = &Sim8051::jump_on_zero;
+     mnemonic["JNZ"] = &Sim8051::jump_not_zero;  
+     mnemonic["JC"] = &Sim8051::jump_on_carry;
+     mnemonic["JNC"] = &Sim8051::jump_no_carry;
+     mnemonic["JB"] = &Sim8051::jump_on_bit;
+     mnemonic["JNB"] = &Sim8051::jump_no_bit;  
+     mnemonic["JBC"] = &Sim8051::jump_on_bit_and_clear;
+     mnemonic["CJNE"] = &Sim8051::cmp_jump_on_not_equal;  
+     mnemonic["DJNZ"] = &Sim8051::djnz;
+     mnemonic["NOP"] = &Sim8051::nop;
+     mnemonic["END"] = &Sim8051::end;
+     mnemonic[""] = &Sim8051::zilch; // for labels on an empty line
+     mnemonic["ORG"] = &Sim8051::zilch;
 
-     mnemonic["MOVC"] = &no_movc;
+     mnemonic["MOVC"] = &Sim8051::no_movc;
   
      if (DEBUG)
           cerr << "Done.\n";
